  
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import StandardScaler

 
housing_data = pd.read_csv('given_dataset.csv')   

 
print(housing_data.head())

 
housing_data.dropna(inplace=True)
 
X = housing_data[['AREA', 'INT_SQFT', 'DIST_MAINROAD', 'N_BEDROOM', 'N_BATHROOM', 'N_ROOM',
          'SALE_COND', 'PARK_FACIL', 'DATE_BUILD', 'BUILDTYPE', 'UTILITY_AVAIL']]
y = housing_data['SALES_PRICE']

 
X = pd.get_dummies(X)

 
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

 
plt.figure(figsize=(20, 16))
sns.heatmap(housing_data.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.show()

 
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
 
model = LinearRegression()
model.fit(X_train, y_train)

 
y_pred = model.predict(X_test)

 
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

 
feature_importance = np.abs(model.coef_)
feature_names = X.columns   

 
print(f"Number of coefficients: {len(feature_importance)}")
print(f"Number of feature names: {len(feature_names)}")
print(f"Feature names: {feature_names.tolist()}")

 
if len(feature_importance) == len(feature_names):
    importance_df = pd.DataFrame({'Feature': feature_names, 'Importance': feature_importance})
    importance_df.sort_values(by='Importance', ascending=False, inplace=True)

 
    plt.figure(figsize=(10, 6))
    plt.bar(importance_df['Feature'], importance_df['Importance'])
    plt.xlabel('Feature')
    plt.ylabel('Importance')
    plt.title('Feature Importance')
    plt.show()
else:
    print("Error: Mismatch between feature names and importance lengths")
